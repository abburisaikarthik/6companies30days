class Solution {
    static int ans ;
    int dp[][];
    public int numberOfWays(int startPos, int endPos, int k) {
        // ans=0;
        dp = new int [3000][k+1];
         for(int i=0;i<dp.length;i++){
            Arrays.fill(dp[i],-1);
        }
       return  helper(startPos,endPos,k);
        // return ans;
    }

    int helper(int i , int j , int k)
    {
        if(k==0&&i==j)
        {
            return 1;
        }

        if (k==0||Math.abs(i-j)>k)return 0;
        if(dp[i+1000][k]!=-1){
            return dp[i+1000][k];
        }
        int left = helper(i-1,j,k-1);
        int right = helper(i+1,j,k-1);
        return dp[i+1000][k] = (left+right)%((int)1e9+7);
    }
}
