

class Solution {
    public int[] maxSubsequence(int[] nums, int k) {
        PriorityQueue<pair> pq = new PriorityQueue<>((p1, p2) -> Integer.compare(p2.val, p1.val));
        for (int i = 0; i < nums.length; i++)
            pq.add(new pair(i, nums[i]));

        ArrayList<Integer> indx = new ArrayList();
        int kdup = k;
        while (k-- > 0) {
            pair p = pq.poll();
            indx.add(p.ind);
        }
        Collections.sort(indx);
        k = kdup;
        int ans[] = new int[k];

        for (int i = 0; i < k; i++) {
            ans[i] = nums[indx.get(i)];
        }
        return ans;
    }
}

class pair {
    int ind;
    int val;

    pair(int ind, int val) {
        this.ind = ind; // Use "this" to refer to instance variables
        this.val = val; // Use "this" to refer to instance variables
    }
}
